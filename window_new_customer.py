# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new_division.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSlot, Qt
from PyQt5.QtWidgets import QWidget, QMessageBox, QCheckBox

from request_base import Request


class WindowNewCustomer(QWidget):
    def __init__(self, RegularPaymentWindow=None, div=None):
        super().__init__()
        self.div = div
        self.RegularPaymentWindow = RegularPaymentWindow
        self.setObjectName("new_customer")
        self.setWindowTitle("Новий постачальник послуг")
        self.setFixedSize(400, 260)

        self.buttonBox = QtWidgets.QDialogButtonBox(self)
        self.buttonBox.setGeometry(QtCore.QRect(30, 180, 340, 90))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel | QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")

        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(50, 30, 290, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label.setText("Введіть назву нових посуг")

        self.verticalLayoutWidget = QtWidgets.QWidget(self)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(50, 70, 260, 100))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")

        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")

        self.new_customer = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.new_customer.setObjectName("new_customer")
        self.new_customer.setPlaceholderText("Им\'я нового постачальника послуг")
        self.new_customer.setMaxLength(15)
        self.verticalLayout.addWidget(self.new_customer)

        self.base_price = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.base_price.setObjectName("base_price")
        self.base_price.setPlaceholderText("Ціна послуг за одиницю")
        self.base_price.setFixedWidth(150)
        self.verticalLayout.addWidget(self.base_price)

        """ Checkbox for add counter """
        self.counter_checkbox = QCheckBox("Додати до розрахунку поля лічильника", self)
        self.verticalLayout.addWidget(self.counter_checkbox)
        self.counter_checkbox.stateChanged.connect(self.add_qline_by_checkbox)

        """ First state of counter """
        self.qline_start_counter = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.qline_start_counter.setObjectName("qline_start_counter")
        self.qline_start_counter.setFixedWidth(150)
        self.qline_start_counter.setEnabled(False)
        self.verticalLayout.addWidget(self.qline_start_counter)

        """Button for close/accept"""
        self.buttonBox.accepted.connect(self.__accept_click)
        self.buttonBox.rejected.connect(self.close)

    def add_qline_by_checkbox(self):
        if self.counter_checkbox.isChecked():
            self.qline_start_counter.setEnabled(True)
            self.qline_start_counter.setPlaceholderText("Перші показники лічильника")
        else:
            self.qline_start_counter.setEnabled(False)
            self.qline_start_counter.setPlaceholderText("")

    @pyqtSlot()
    def __accept_click(self):
        __new_customer = self.new_customer.text()
        __base_price = self.base_price.text()
        __counter = self.qline_start_counter.text()

        # request = Request()
        # sql_req = "SELECT div FROM system"
        # data = request.show_base(sql_req)

        print(self.div)
        print("Under development")
        QMessageBox.critical(self, "Under development!",
                                 "Sorry! :(\nUnder development!", QMessageBox.Ok, QMessageBox.Ok)

        if self.RegularPaymentWindow is not None:
            self.RegularPaymentWindow.refresh()

        # if __new_customer in str(data):
        #     QMessageBox.critical(self, "Таке ім'я нового розділу вже існує!",
        #                          "Введіть унікальну назву нового розділу!",
        #                          QMessageBox.Ok, QMessageBox.Ok)
        #     self.short_name_div.setText('')
        # elif short_name != '':
        #     if self.counter_checkbox.isChecked():
        #         sql_req = "INSERT INTO system (div, div_full_name) VALUES ('" + short_name + "', '" + full_name + "')"
        #     if self.counter_checkbox.isChecked() is not True:
        #         sql_req = "INSERT INTO system (div, div_full_name) VALUES ('" + short_name + "', '" + full_name + "')"
        #     request = Request()
        #     request.execute_data(sql_req)
        #     QMessageBox.information(self, "Вітаю!", "Новий розділ успішно створенно!", QMessageBox.Ok, QMessageBox.Ok)
        #     self.close()
        # else:
        #     QMessageBox.critical(self, "Відсутнє ім'я нового розділу!",
        #                          "Введіть скорочену назву нового розділу!", QMessageBox.Ok, QMessageBox.Ok)

    def keyPressEvent(self, e):
        if e.key() == Qt.Key_Escape:
            self.close()
